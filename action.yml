name: 'changelog-template-action'
description: 'Generate changelogs from templates with reference to git history, tags and merged pull requests'
author: 'srz_zumix'
inputs:
  owner:
    description: 'git repository owner'
    default: "${{ github.repository_owner }}"
    required: false
  repo:
    description: 'git repository name'
    default: "${{ github.event.repository.name }}"
    required: false
  template_file:
    description: 'Template file path'
    required: true
  output_file:
    description: 'Output file path'
    required: false
  from:
    description: 'git commit revision range start from'
    required: false
  to:
    description: 'git commit revision range end to'
    required: false
  github_token:
    description: 'git repository access token'
    default: "${{ github.token }}"
  debug:
    description: 'enable debug'
    default: false
    required: false

outputs:
  text:
    description: "jinja2 output text"
    value: ${{ steps.kamidana.outputs.text }}

runs:
  using: "composite"
  steps:
    - name: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION || '3.10' }}
        # cache: 'pip'
        # cache-dependency-path: ${{ github.action_path  }}/requirements.txt
    - name: pip install
      shell: bash
      run: |
        pip install jinja2-cli
    - name: resolve from-to
      id: resolve-from-to
      shell: bash
      env:
        INPUTS_FROM: "${{ inputs.from }}"
        INPUTS_TO: "${{ inputs.to }}"
        INPUTS_OWNER: "${{ inputs.owner }}"
        INPUTS_REPO: "${{ inputs.repo }}"
        INPUTS_DEBUG: "${{ inputs.debug }}"
        GITHUB_TOKEN: "${{ inputs.github_token }}"
      run: "${GITHUB_ACTION_PATH}/resolve-from-to.sh"
    - name: create associatedPullRequests.json
      shell: bash
      env:
        INPUTS_FROM: "${{ steps.resolve-from-to.outputs.from }}"
        INPUTS_TO: "${{ steps.resolve-from-to.outputs.to }}"
        INPUTS_OWNER: "${{ inputs.owner }}"
        INPUTS_REPO: "${{ inputs.repo }}"
        INPUTS_DEBUG: "${{ inputs.debug }}"
        GITHUB_TOKEN: "${{ inputs.github_token }}"
      run: |
        "${GITHUB_ACTION_PATH}/associatedPullRequests.sh" > "${{ runner.temp }}/associatedPullRequests.json"
    - name: create inputs.json
      shell: bash
      env:
        INPUTS_FROM: "${{ steps.resolve-from-to.outputs.from }}"
        INPUTS_TO: "${{ steps.resolve-from-to.outputs.to }}"
        INPUTS_CONTEXT: "${{ toJson(inputs) }}"
      run: |
        echo "{ \"from_revision\": \"${INPUTS_FROM}\", \"to_revision\": \"${INPUTS_TO}\" }" > "${{ runner.temp }}/revision.json"
        echo "${INPUTS_CONTEXT}" | jq "del(.github_token,.debug) | { inputs: . }" > "${{ runner.temp }}/inputs.json"
    - name: kamidana
      id: kamidana
      uses: srz-zumix/kamidana-action@main
      with:
        template: "${{ inputs.template_file }}"
        output_file: "${{ inputs.output_file }}"
        data_files: |
          ${{ runner.temp }}/associatedPullRequests.json
          ${{ runner.temp }}/revision.json
          ${{ runner.temp }}/inputs.json
        input_format: "json"
        tee: true
        extensions: |
          i18n
          do
          loopcontrols
          with_
          autoescape
          debug


branding:
  icon: 'sliders'
  color: 'yellow'
